#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define FN1 1

/ {
    macros {
        de_ae: de_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK &kt LALT &kp KP_NUMBER_1 &kp KP_NUMBER_3 &kp KP_NUMBER_2 &kt LEFT_ALT &kp KP_NUMLOCK>;
            label = "DE_AE";
        };

        de_oe: de_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK &kt LALT &kp KP_NUMBER_1 &kp KP_NUMBER_4 &kp KP_NUMBER_8 &kt LALT &kp KP_NUMLOCK>;
            label = "DE_OE";
        };

        de_ue: de_ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK &kt LALT &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_9 &kt LALT &kp KP_NUMLOCK>;
            label = "DE_UE";
        };

        de_ae_uc: de_ae_uc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK &kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_6 &kt LEFT_ALT &kp KP_NUMLOCK>;
            label = "DE_AE_UC";
        };

        de_oe_uc: de_oe_uc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK &kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_4 &kt LALT &kp KP_NUMLOCK>;
            label = "DE_OE_UC";
        };

        de_ue_uc: de_ue_uc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK &kt LALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_0 &kt LALT &kp KP_NUMLOCK>;
            label = "DE_UE_UC";
        };

        sv_ao: sv_ao {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK &kt LALT &kp KP_NUMBER_1 &kp KP_NUMBER_3 &kp KP_NUMBER_4 &kt LALT &kp KP_NUMLOCK>;
            label = "SV_AO";
        };

        sv_ao_uc: sv_ao_uc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK &kt LALT &kp KP_NUMBER_1 &kp KP_NUMBER_4 &kp KP_NUMBER_3 &kt LALT &kp KP_NUMLOCK>;
            label = "SV_AO_UC";
        };
    };

    behaviors {
        de_oe_b: de_oe_b {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_OE_B";
            bindings = <&de_oe>, <&de_oe_uc>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_ae_b: de_ae_b {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_AE_B";
            bindings = <&de_ae>, <&de_ae_uc>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_ue_b: de_ue_b {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_UE_B";
            bindings = <&de_ue>, <&de_ue_uc>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sv_ao_b: sv_ao_b {
            compatible = "zmk,behavior-mod-morph";
            label = "SV_AO_B";
            bindings = <&sv_ao>, <&sv_ao_uc>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // Base layer
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |NUHS| ENTER   |
            // | SHIFT |NUBS| Z |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |    Shift   | FN |
            // |  LCTL  |  LWIN  |  LALT  | SPACE  | SPACE |    SPACE   |  RALT | FN  |   RWIN  | RCTRL |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&kp ESC    &kp N1    &kp N2    &kp N3     &kp N4     &kp N5     &kp N6    &kp N7         &kp N8   &kp N9     &kp N0    &kp MINUS  &kp EQUAL  &kp BSLH       &kp GRAVE
&kp TAB    &kp Q     &kp W     &kp E      &kp R      &kp T      &kp Y     &kp U          &kp I    &kp O      &kp P     &kp LBKT   &kp RBKT   &kp BACKSPACE
&kp CLCK   &kp A     &kp S     &kp D      &kp F      &kp G      &kp H     &kp J          &kp K    &kp L      &kp SEMI  &kp SQT    &kp NUHS   &kp RET
&kp LSHFT  &kp NUBS  &kp Z     &kp X      &kp C      &kp V      &kp B     &kp N          &kp M    &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT  &mo 2
&kp LCTRL  &mo 1     &kp LALT  &kp SPACE  &kp SPACE  &kp SPACE  &kp RALT  &kp RIGHT_ALT  &kp DEL  &kp RCTRL
&none
            >;
        };

        fn_layer {
            // Function layer
            // ------------------------------------------------------------------------------------------
            // | RESET | F1 |  F2 |  F3 |  F4 |  F5 |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |TRNS | DEL |
            // |BT_CLR |TRNS | UP  | BT0 | BT1 | BT2 | BT3 | BT4 | TRNS | TRNS | TRNS | TRNS | TRNS | TRNS|
            // | BOOTL  |LEFT |DOWN |RIGHT|TRNS |TRNS |TRNS | TRNS| TRNS |TRNS| TRNS |TRNS | TRNS | TRNS  |
            // | TRNS |TRNS|TRNS|TRNS|TRNS | TRNS| TRNS | TRNS |  TRNS| TRNS | TRNS| TRNS |   TRNS   |TRNS|
            // |  TRNS | TRNS | TRNS |      TRNS      | TRNS |     TRNS     |  TRNS |  TRNS | TRNS | TRNS |
            // | Rotary | (<-- Rotary switch) ----------------------------------------------------------- 

            bindings = <
&sys_reset   &kp F1  &kp F2  &kp F3        &kp F4        &kp F5        &kp F6        &kp F7        &kp F8      &kp F9        &kp F10       &kp F11    &kp F12  &kp F13  &kp F14
&bt BT_CLR   &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp UP      &trans        &trans        &kp HOME   &kp END  &trans
&bootloader  &trans  &trans  &trans        &trans        &trans        &trans        &kp LEFT      &kp DOWN    &kp RIGHT     &trans        &kp PG_UP  &trans   &trans
&trans       &trans  &trans  &trans        &trans        &trans        &trans        &trans        &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp PG_DN  &trans   &trans
&trans       &trans  &trans  &trans        &trans        &trans        &trans        &trans        &kp LWIN    &trans
&none
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &sv_ao_b  &trans  &trans  &trans  &trans  &trans  &de_ue_b  &trans  &de_oe_b  &trans  &trans  &trans  &trans
&trans  &de_ae_b  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans  &trans
&trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans  &trans  &trans  &trans
&trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans
&trans
            >;
        };
    };
};
